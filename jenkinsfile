pipeline {
    agent any

    environment {
        DOCKER_IMAGE_NAME = 'calculator'
        GITHUB_REPO_URL = 'https://github.com/anarghya15/calculator.git'
    }
    try {
		stages {
		    stage('Checkout') {
		        steps {
		            script {
		                // Checkout the code from the GitHub repository
		                git branch: 'main', url: "${GITHUB_REPO_URL}"
		            }
		        }
		    }

		    stage('Build Docker Image') {
		        steps {
		            script {
		                // Build Docker image
		                docker.build("${DOCKER_IMAGE_NAME}", '.')
		            }
		        }
		    }

		    stage('Push Docker Images') {
		        steps {
		            script{
		                docker.withRegistry('', 'DockerHubCred') {
		                sh 'docker tag calculator anarghya15/calculator:latest'
		                sh 'docker push anarghya15/calculator'
		                }
		             }
		        }
		    }

		   stage('Run Ansible Playbook') {
			    steps {
			        script {
			            ansiblePlaybook(
			                playbook: 'deploy.yml',
			                inventory: 'inventory'
			             )
			        }
			    }
			}

		}
	} catch(e) {
		// mark build as failed
		currentBuild.result = "FAILURE";
	   
		SendEmailNotification(currentBuild.result)

		// mark current build as a failure and throw the error
		throw e;
	  }	
}

def SendEmailNotification(String result) {
  
    // config 
    def to = emailextrecipients([
           requestor()
    ])
    
    // set variables
    def subject = "${env.JOB_NAME} - Build #${env.BUILD_NUMBER} ${result}"
    def content = '${JELLY_SCRIPT,template="html"}'

    // send email
    if(to != null && !to.isEmpty()) {
      emailext(body: content, mimeType: 'text/html',
         subject: subject,
         to: to, attachLog: true )
    }
}
